"use strict";
/**
 * Copyright 2018 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class Surface {
    constructor(surface = {}) {
        this.capabilities = new Capabilities(surface.capabilities);
    }
}
exports.Surface = Surface;
class Capabilities {
    constructor(list = []) {
        this.list = list;
    }
    /** @public */
    has(capability) {
        return this.list.map(c => c.name).indexOf(capability) > -1;
    }
}
exports.Capabilities = Capabilities;
class AvailableSurfacesCapabilities {
    constructor(surfaces) {
        this.surfaces = surfaces;
    }
    /** @public */
    has(capability) {
        return this.surfaces.findIndex(surface => surface.capabilities.has(capability)) > -1;
    }
}
exports.AvailableSurfacesCapabilities = AvailableSurfacesCapabilities;
class AvailableSurfaces {
    constructor(list) {
        this.list = list.map(surface => new Surface(surface));
        this.capabilities = new AvailableSurfacesCapabilities(this.list);
    }
}
exports.AvailableSurfaces = AvailableSurfaces;
class Available {
    constructor(surfaces = []) {
        this.surfaces = new AvailableSurfaces(surfaces);
    }
}
exports.Available = Available;
//# sourceMappingURL=surface.js.map