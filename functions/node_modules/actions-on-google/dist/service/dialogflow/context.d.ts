/**
 * Copyright 2018 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import * as Api from './api/v2';
import * as ApiV1 from './api/v1';
import { Parameters } from './dialogflow';
/** @public */
export interface Contexts {
    /** @public */
    [context: string]: Context<Parameters> | undefined;
}
/** @public */
export interface OutputContexts {
    /** @public */
    [context: string]: OutputContext<Parameters> | undefined;
}
/** @public */
export interface Context<TParameters extends Parameters> extends OutputContext<TParameters> {
    /** @public */
    name: string;
    /** @public */
    lifespan: number;
    /** @public */
    parameters: TParameters;
}
/** @public */
export interface OutputContext<TParameters extends Parameters> {
    /** @public */
    lifespan: number;
    /** @public */
    parameters?: TParameters;
}
export declare class ContextValues<TContexts extends Contexts> {
    private session;
    /** @public */
    input: TContexts;
    /** @public */
    output: OutputContexts;
    constructor(outputContexts?: Api.GoogleCloudDialogflowV2Context[] | ApiV1.DialogflowV1Context[], session?: string | undefined);
    private isV1(context);
    serialize(): Api.GoogleCloudDialogflowV2Context[];
    serializeV1(): ApiV1.DialogflowV1Context[];
    /** @public */
    get(name: keyof TContexts): TContexts[keyof TContexts];
    /** @public */
    set(name: string, lifespan: number, parameters?: Parameters): void;
    /** @public */
    delete(name: string): void;
    /** @public */
    [Symbol.iterator](): IterableIterator<Context<Parameters> | undefined>;
}
